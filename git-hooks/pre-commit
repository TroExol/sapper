#!/bin/sh
RED="\033[1;31m"
ORANGE="\033[1;33m"
GREEN="\033[1;32m"
NC="\033[0m"
linter_exit_code=1
# Получаем файлы в стейдже
staged_js_files=$(git diff --cached --diff-filter=d --name-only -- src/ | grep -E ".jsx?$")

# Прогоняем линтеры
lint() {
  if [ -n "$staged_js_files" ]; then
    ./node_modules/.bin/eslint $staged_js_files --quiet --fix
    if [ $? = 1 ]; then
      return 1
    fi
  fi

  return 0
}

# Выводим список измененных файлов после eslint --fix
printFixedFiles() {
  not_staged_files=$(git diff --diff-filter=d --name-only)
  fixed_files=""
  for not_staged_file in $not_staged_files; do
    contains=false
    fixed_js_files=$(echo "$staged_js_files" | grep "$not_staged_file")
    if [ -n "$fixed_js_files" ]; then
      contains=true
    fi
    if [ $contains = true ]; then
      fixed_files=$([ -n "$fixed_files" ] && echo "$fixed_files\n$not_staged_file" || echo "$not_staged_file")
    fi
  done
  if [ -n "$fixed_files" ]; then
    echo "${ORANGE}Fixed files: "
    echo "$fixed_files${NC}" | sed 's/^/ - /'
    echo
  fi
}

lint
linter_exit_code=$?

# Добавляем в стейдж, если есть файлы
if [ -n "$staged_js_files" ]; then
  printFixedFiles
  git add -f $staged_js_files
fi

if [ $linter_exit_code -eq 1 ]; then
  echo "${RED} ❌ Linter errors have occurred (ノಠ益ಠ)ノ彡┻━┻${NC}"
  exit 1
else
  echo "${GREEN} ✔ Linter well done ヾ(⌐■_■)ノ♪${NC}"
  exit 0
fi
